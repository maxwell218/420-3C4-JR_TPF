<Application x:Class="Facebook.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Facebook"
             StartupUri="Windows/LoginWindow.xaml">
    <Application.Resources>
        <!-- Nav color: #FFFFFF -->
        <!-- Background color: #F0F2F5 -->
        <!-- Facebook color: #039BE5 -->

        <!-- Login & logo -->
        <Style x:Key="LoginTextBlockLogoStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontFamily" Value="Tahoma"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#039BE5"/>
        </Style>
        <Style x:Key="LoginTextBoxAndPasswordBoxStyle" TargetType="{x:Type Control}">
            <Setter Property="Height" Value="45"/>
            <Setter Property="Background" Value="#E8F0FE"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="5, 0, 5, 0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Border x:Name="border" CornerRadius="7" BorderThickness="1" BorderBrush="LightGray" Background="{TemplateBinding Background}">
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#7289DA"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#039BE5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LoginHyperlinkStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Style.Resources>
                <Style TargetType="{x:Type Hyperlink}">
                    <Setter Property="Foreground" Value="#039BE5"/>
                    <Setter Property="TextDecorations" Value="None"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="LoginTextBoxStyle" BasedOn="{StaticResource LoginTextBoxAndPasswordBoxStyle}" TargetType="{x:Type TextBox}"/>
        <Style x:Key="LoginPasswordBoxStyle" BasedOn="{StaticResource LoginTextBoxAndPasswordBoxStyle}" TargetType="{x:Type PasswordBox}"/>
        <Style x:Key="LoginButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="20 10"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="#039BE5"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="7" BorderThickness="1" BorderBrush="LightGray" Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#7289DA"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#039BE5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#039BE5" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                            <ColorAnimation To="White" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#DCDCDC" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                            <ColorAnimation To="Gray" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CreateAccountButtonStyle" BasedOn="{StaticResource LoginButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#42B72A"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#42B72A" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#DCDCDC" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Navbar left and main side -->
        <Style x:Key="ToolTipStyle" TargetType="{x:Type ToolTip}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Black" Opacity="0.6"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolTip}">
                        <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1">
                            <ContentPresenter Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Placement" Value="Bottom"/>
            <Setter Property="VerticalOffset" Value="5"/>
            <Setter Property="Width" Value="120"/>
        </Style>
        <Style x:Key="NavBarButtonStyle_Default" TargetType="{x:Type Control}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="Transparent" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#DCDCDC" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NavBarToggleButtonStyle" BasedOn="{StaticResource NavBarButtonStyle_Default}" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource ToolTipStyle}"></Style>
            </Style.Resources>
        </Style>
        <Style x:Key="NavBarLogoButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" BorderThickness="3">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                            <Border.BorderBrush>
                                <SolidColorBrush x:Name="bgBrush" Color="Transparent" />
                            </Border.BorderBrush>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Border.MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="bgBrush" Storyboard.TargetProperty="Color" To="#039BE5" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Border.MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="bgBrush" Storyboard.TargetProperty="Color" To="Transparent" Duration="0:0:0.3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#036BF5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Navbar right side -->
        <Style x:Key="SideBarNameToggleButtonStyle" BasedOn="{StaticResource NavBarButtonStyle_Default}" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SideBarToggleButtonStyle" x:Name="button" TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="#DCDCDC"/>
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#DCDCDC"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="25" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#DCDCDC" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#999999" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- Content and posts -->
        <Style x:Key="PostsStyle" TargetType="{x:Type ListView}">
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Style.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Width" Value="{Binding ActualWidth, ElementName=PostListView}"/>
                    <Setter Property="MaxWidth" Value="900"/>
                    <Setter Property="Margin" Value="0, 0, 0, 15"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border Background="White" BorderBrush="#E4EBEC" BorderThickness="1" CornerRadius="10" Margin="15, 15, 15, 0">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>
        <!-- Friends listview -->
        <Style x:Key="FriendListStyle" TargetType="{x:Type ListView}">
            <Style.Resources>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Margin" Value="0, 3"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="border" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation To="#DCDCDC" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiTrigger.EnterActions>
                                        <MultiTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation To="Transparent" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </MultiTrigger.ExitActions>
                                        <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="border" Value="#3DDADADA"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FFDADADA"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="border" Value="#3D26A0DA"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF26A0DA"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="TextElement.Foreground" TargetName="border" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Resources>
                        <Style TargetType="{x:Type WrapPanel}">
                            <Style.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Width" Value="40"/>
                                    <Setter Property="Height" Value="40"/>
                                    <Setter Property="CornerRadius" Value="25"/>
                                    <Setter Property="Margin" Value="0, 0, 5, 0"/>
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <ImageBrush Stretch="Fill" RenderOptions.BitmapScalingMode="HighQuality"/>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                </Style>
                            </Style.Resources>
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="PostReactionsStyle" TargetType="{x:Type WrapPanel}">
            <Setter Property="Margin" Value="5, 5, 5, 0"/>
            <Style.Resources>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border CornerRadius="10" BorderBrush="LightGray" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="True">
                                    <ContentPresenter/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Resources>
                        <Style TargetType="{x:Type WrapPanel}">
                            <Setter Property="Margin" Value="2"/>
                            <Style.Resources>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Width" Value="20"/>
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
                                </Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="Margin" Value="5, 0, 0, 0"/>
                                    <Setter Property="FontSize" Value="12"/>
                                </Style>
                            </Style.Resources>
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
        </Style>
    </Application.Resources>
</Application>
